import org.apache.http.client.fluent.Request
import java.util.concurrent.Callable
import java.util.concurrent.Executors

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.apache.httpcomponents:fluent-hc:4.5')
    }
}

plugins {
    id "au.com.dius.pact" version "2.2.10"
}

dependencies {
    compile project(':web')
}

task startApp(type: JavaExec) {
    main = 'com.nakedgardener.cdc.CDCApplication'
    classpath = sourceSets.test.runtimeClasspath
    systemProperty 'server.port', '8888'
    systemProperty 'spring.profiles.active', 'stubbed'
}

task startAppAndWait << {
    Executors.newSingleThreadExecutor().submit({startApp.execute()} as Callable)
    for(def i = 0; i < 60; i ++) {
        try {
            if (Request.Get("http://localhost:8888").execute().returnResponse().getStatusLine().getStatusCode() == 200) return;
        }
        catch (Exception e) {}
        Thread.sleep(500);
    }
    throw new GradleException("Application server has not started within 30 seconds.")
}

pact {
    serviceProviders {
        blogProvider {
            startProviderTask = startAppAndWait
            protocol = 'http'
            host = 'localhost'
            port = 8888
            path = '/'
            hasPactsWith('manyConsumers') {
                pactFileLocation = file('/Users/ferguss/Projects/naked-gardener/cdc-test/build/pacts/')
            }
        }
    }
}
